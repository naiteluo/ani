{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/monitor/monitor.component.ts","./src/app/monitor/monitor.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'ani-web';\n}\n","<mat-toolbar class=\"title-bar\">\n  <span>Ani</span>\n</mat-toolbar>\n<div class=\"content\" role=\"main\">\n  <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\n\nimport { AppRoutingModule } from './app-routing.module'\nimport { AppComponent } from './app.component'\nimport { MonitorComponent } from './monitor/monitor.component'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\n\n// Angular Material Components\nimport { MatCheckboxModule } from '@angular/material/checkbox'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatInputModule } from '@angular/material/input'\nimport { MatAutocompleteModule } from '@angular/material/autocomplete'\nimport { MatDatepickerModule } from '@angular/material/datepicker'\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { MatRadioModule } from '@angular/material/radio'\nimport { MatSelectModule } from '@angular/material/select'\nimport { MatSliderModule } from '@angular/material/slider'\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle'\nimport { MatMenuModule } from '@angular/material/menu'\nimport { MatSidenavModule } from '@angular/material/sidenav'\nimport { MatToolbarModule } from '@angular/material/toolbar'\nimport { MatListModule } from '@angular/material/list'\nimport { MatGridListModule } from '@angular/material/grid-list'\nimport { MatCardModule } from '@angular/material/card'\nimport { MatStepperModule } from '@angular/material/stepper'\nimport { MatTabsModule } from '@angular/material/tabs'\nimport { MatExpansionModule } from '@angular/material/expansion'\nimport { MatButtonToggleModule } from '@angular/material/button-toggle'\nimport { MatChipsModule } from '@angular/material/chips'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner'\nimport { MatProgressBarModule } from '@angular/material/progress-bar'\nimport { MatDialogModule } from '@angular/material/dialog'\nimport { MatTooltipModule } from '@angular/material/tooltip'\nimport { MatSnackBarModule } from '@angular/material/snack-bar'\nimport { MatTableModule } from '@angular/material/table'\nimport { MatSortModule } from '@angular/material/sort'\nimport { MatPaginatorModule } from '@angular/material/paginator'\n\nimport { NgxEchartsModule } from 'ngx-echarts'\nimport * as echarts from 'echarts'\nimport 'echarts-gl'\nimport { FormsModule } from '@angular/forms'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MonitorComponent,\n  ],\n  imports: [\n    NgxEchartsModule.forRoot({\n      echarts,\n    }),\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core'\nimport { io, Socket } from 'socket.io-client'\nimport { LineSeriesOption } from 'echarts'\n\n@Component({\n  selector: 'app-monitor',\n  templateUrl: './monitor.component.html',\n  styleUrls: ['./monitor.component.scss'],\n})\nexport class MonitorComponent implements OnInit {\n  private socket: Socket;\n\n  pids = '';\n\n  freq = 1000;\n\n  query = 'htest|webview:sandboxed';\n\n  processDataArr: {\n    [key: string]: {\n      processName: string;\n      chartOption: any;\n      xArr: number[];\n      data: any[];\n    };\n  } = {};\n\n  displayedRawColumns: string[] = [\n    // 'Pss Total',\n    // 'Private Dirty',\n    // 'Private Clean',\n    // 'SwapPss Dirty',\n    // 'Heap Size',\n    // 'Heap Alloc',\n    // 'Heap Free',\n  ];\n\n  displayedSummaryColumns: string[] = [\n    'JavaHeap',\n    'NativeHeap',\n    'Code',\n    'Stack',\n    'Graphics',\n    'PrivateOther',\n    'System',\n    'TotalSwapPss',\n    'Total',\n  ];\n\n  chartOptionTpl: any = {\n    title: {\n      text: 'Meminfo',\n    },\n    legend: {\n      data: this.displayedSummaryColumns.slice(),\n    },\n    toolbox: {\n      feature: {\n        saveAsImage: {},\n      },\n    },\n    grid: {\n      left: '3%',\n      right: '4%',\n      bottom: '3%',\n      containLabel: true,\n    },\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'cross',\n        label: {\n          backgroundColor: '#6a7985',\n        },\n      },\n    },\n    xAxis: {\n      type: 'category',\n      boundaryGap: false,\n      data: [],\n    },\n    yAxis: {\n      type: 'value',\n      // min: 0,\n      // max: 1028 * 1 * 1024,\n      // interval: 1024 * 100, // 100MB\n    },\n    series:\n      this.displayedSummaryColumns.slice().map(v => {\n        return {\n          name: v,\n          type: 'line',\n          stack: v === 'Total' ? '' : 'Total',\n          areaStyle: {},\n          emphasis: {\n            focus: 'series',\n          },\n          data: [],\n        }\n      }),\n\n  }\n\n  columnsToDisplay: string[] = this.displayedSummaryColumns.slice()\n\n  downloadFileLink?: string;\n\n  downloadFileName?: string;\n\n  popup?: Window | null;\n\n  constructor() {\n    this.socket = io('ws://localhost:3001')\n  }\n\n  private cur = 0;\n\n  private commonXArr: number[] = [];\n\n  ngOnInit(): void {\n    this.socket.connect()\n    this.socket.on('data', (dataArr: any) => {\n      this.commonXArr.push(this.cur)\n      const marks: any = {}\n      // process data from server\n      dataArr.forEach((data: any) => {\n        if (!this.processDataArr[data.pid]) {\n          this.processDataArr[data.pid] = {\n            processName: data.pname,\n            chartOption: JSON.parse(JSON.stringify(this.chartOptionTpl)),\n            xArr: [],\n            data: [],\n          }\n          const tempNameArr = data.pname.split('.')\n          this.processDataArr[data.pid].chartOption.title.text = `${data.pid}-${tempNameArr[tempNameArr.length - 1]}`\n        }\n        const newData = this.processDataArr[data.pid]\n        const result: any = {}\n        for (const key in data.appSummarySection) {\n          if (Object.prototype.hasOwnProperty.call(data.appSummarySection, key)) {\n            const element: Array<number> = data.appSummarySection[key]\n            result[key] = element\n          }\n        }\n        newData.data = [result, ...newData.data]\n        newData.xArr = [...this.commonXArr]\n        newData.chartOption.xAxis = {\n          ...newData.chartOption.xAxis,\n          data: [...newData.xArr],\n        }\n        const series: Array<LineSeriesOption> = newData.chartOption.series\n        newData.chartOption.series = series.map((s: LineSeriesOption) => {\n          const temp = [...(s.data as Array<number>)]\n          temp[this.cur] = Number(result[s.name || '']) || 0\n          return {\n            ...s,\n            data: temp,\n          }\n        })\n        newData.chartOption = { ...newData.chartOption }\n        marks[data.pid] = true\n      })\n      // update yaxis and process data not in server res but in local data arr\n      for (const key in this.processDataArr) {\n        if (marks[key]) continue\n        if (Object.prototype.hasOwnProperty.call(this.processDataArr, key)) {\n          const newData = this.processDataArr[key]\n          newData.data = [{}, ...newData.data]\n          newData.xArr = [...this.commonXArr]\n          newData.chartOption.xAxis = {\n            ...newData.chartOption.xAxis,\n            data: [...newData.xArr],\n          }\n          const series: Array<LineSeriesOption> = newData.chartOption.series\n          newData.chartOption.series = series.map((s: LineSeriesOption) => {\n            const temp = [...(s.data as Array<number>)]\n            temp[this.cur] = 0\n            return {\n              ...s,\n              data: temp,\n            }\n          })\n          newData.chartOption = { ...newData.chartOption }\n        }\n      }\n      this.cur++\n    })\n  }\n\n  ngOnDestory() {\n    this.socket.disconnect()\n  }\n\n  onStartBtnClick() {\n    this.socket.emit('start')\n  }\n\n  onStopBtnClick() {\n    this.socket.emit('stop')\n  }\n\n  onSnapshotBtnCLick() {\n    this.socket.emit('snapshot', this.pids.split(','))\n  }\n\n  onExportBtnClick() {\n    const file = new Blob([JSON.stringify({\n      pids: this.pids,\n      processDataArr: this.processDataArr,\n    })], { type: 'application/octet-stream' })\n    // eslint-disable-next-line node/no-unsupported-features/node-builtins\n    this.downloadFileLink = URL.createObjectURL(file)\n    this.downloadFileName = `data-${Number(new Date())}`\n    this.popup = this.popup || open('', '_blank')\n    if (this.popup) {\n      this.popup.document.title = 'downloading...'\n      this.popup.document.body.innerText = 'downloading...'\n    }\n    const reader = new FileReader()\n    reader.onloadend = () => {\n      const url = reader.result\n      if (this.popup) {\n        this.popup!.location.href = url as string\n      }\n      this.popup = null // reverse-tabnabbing #460\n    }\n    reader.readAsDataURL(file)\n  }\n\n  onImportBtnClick(e: Event) {\n    const input = e.target as HTMLInputElement\n    const reader = new FileReader()\n    reader.addEventListener('load', () => {\n      const text = reader.result?.toString()\n      if (text) {\n        const data = JSON.parse(text)\n\n        this.pids = data.pids\n        this.processDataArr = data.processDataArr\n        this.socket.close()\n      } else {\n        // eslint-disable-next-line no-console\n        console.error('invalid input file')\n      }\n    })\n    reader.readAsText(input.files![0])\n  }\n\n  onUpdateConfigBtnCLick() {\n    this.socket.emit('config', {\n      pids: (this.pids && this.pids.split(',').length > 0) ? this.pids.split(',') : undefined,\n      freq: Number(this.freq),\n      query: this.query,\n    })\n  }\n\n  onClearBtnCLick() {\n    this.processDataArr = {}\n  }\n}\n","<div class=\"monitor\">\n  <section>\n    <div class=\"control-button-row\">\n      <mat-form-field>\n        <mat-label>采集频率（ms）</mat-label>\n        <input type=\"text\" matInput [(ngModel)]=\"freq\" placeholder=\"2000ms\">\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>指定进程id或名称</mat-label>\n        <input type=\"text\" matInput [(ngModel)]=\"pids\" placeholder=\"pid or pname concat with ,\" [(ngModel)]=\"pids\">\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>模糊进程检索</mat-label>\n        <input type=\"text\" matInput [(ngModel)]=\"query\" placeholder=\"name_a|name_b\">\n      </mat-form-field>\n      <button mat-stroked-button (click)=\"onUpdateConfigBtnCLick()\" color=\"primary\">\n        UpdateConfig\n      </button> |\n      <button mat-stroked-button (click)=\"onClearBtnCLick()\" color=\"primary\">\n        Clear\n      </button>\n      <button mat-stroked-button (click)=\"onSnapshotBtnCLick()\" color=\"primary\">\n        Snapshot\n      </button>\n      <button mat-stroked-button (click)=\"onStartBtnClick()\" color=\"primary\">\n        Start\n      </button>\n      <button mat-stroked-button (click)=\"onStopBtnClick()\" color=\"warn\">\n        Stop\n      </button> |\n      <button mat-stroked-button (click)=\"onExportBtnClick()\" color=\"primary\">\n        Export\n      </button>\n      <label for=\"file\">导入：</label>\n      <input\n        id=\"file\"\n        name=\"file\"\n        type=\"file\"\n        accept=\"*\"\n        mat-stroked-button\n        (change)=\"onImportBtnClick($event)\"\n        color=\"primary\"\n      />\n    </div>\n  </section>\n  <div\n    class=\"mem-container\"\n    *ngFor=\"let processData of processDataArr | keyvalue\"\n  >\n    <div class=\"mem-table-container\">\n      <table mat-table [dataSource]=\"processData.value.data\" class=\"mem-table\">\n        <ng-container\n          [matColumnDef]=\"column\"\n          *ngFor=\"let column of displayedSummaryColumns\"\n        >\n          <th mat-header-cell *matHeaderCellDef>{{ column }}</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element[column] }}</td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay\"></tr>\n      </table>\n    </div>\n    <div class=\"mem-chart-container\">\n      <div\n        echarts\n        [options]=\"processData.value.chartOption\"\n        class=\"demo-chart\"\n      ></div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { MonitorComponent } from './monitor/monitor.component'\n\nconst routes: Routes = [\n  { path: 'monitor', component: MonitorComponent },\n  { path: '', component: MonitorComponent },\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core'\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\n\nimport { AppModule } from './app/app.module'\nimport { environment } from './environments/environment'\n\nif (environment.production) {\n  enableProdMode()\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule).catch(error => {\n  // eslint-disable-next-line no-console\n  return console.error(error)\n})\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}